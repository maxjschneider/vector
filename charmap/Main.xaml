<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:charmap"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:sys="clr-namespace:System;assembly=mscorlib" x:Class="charmap.Main"
        mc:Ignorable="d"
        Title="Main" Height="265.79" Width="272.776" Background="Black" WindowStyle="None" ResizeMode="NoResize" Closing="Window_Closing">
    <Window.Resources>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="FlatTab" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Black" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="Center"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border BorderThickness="1" BorderBrush="Black">
                            <Grid x:Name="TabPanel">
                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="TabPanel" Property="Background" Value="Black" />
                                <Setter Property="Foreground" Value="MediumVioletRed" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="TabPanel" Property="Background" Value="Black" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ExitButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="51,0,0,0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#121314"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="Black" BorderThickness="0" BorderBrush="White">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="White" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="White"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="White"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#1e1e1e" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Black"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Black"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="White"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="Black" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <!--<Ellipse 
                      Name="Ellipse" 
                      Fill="Yellow"
                      Stroke="Yellow" 
                      Height="10"
                      Width="{Binding Path=ThumbWidth, RelativeSource={RelativeSource TemplatedParent}}"
                      StrokeThickness="1" />-->
                        <Rectangle 
                    Fill="Azure"
                    Stroke="Azure"
                    Height="7"
                    Width="{Binding Path=ThumbWidth, RelativeSource={RelativeSource TemplatedParent}}"
                    StrokeThickness="1"
                    Margin="0.1,.1,.1,.1"/>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
        <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA"/>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>



    </Window.Resources>

    <Grid Background="Black" Height="266" VerticalAlignment="Top">
        <TabControl HorizontalAlignment="Center" Height="227" Margin="11,39,11,0" VerticalAlignment="Center" Width="251" Style="{DynamicResource FlatTab}">
            <TabItem Header="main" Background="Black" BorderBrush="{x:Null}">
                <Grid Background="Black">
                    <Label Foreground="White" Content="weapon" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top"/>
                    <Label Foreground="White" Content="scope" HorizontalAlignment="Left" Margin="10,36,0,0" VerticalAlignment="Top"/>
                    <Label Foreground="White" Content="barrel" HorizontalAlignment="Left" Margin="10,67,0,0" VerticalAlignment="Top"/>

                    <ComboBox SelectedIndex="0" x:Name="WeaponCombo" Text="none" HorizontalAlignment="Left" Margin="103,9,0,0" VerticalAlignment="Top" Width="132"  Style="{DynamicResource ResourceKey=ComboBoxFlatStyle}" SelectionChanged="WeaponCombo_SelectionChanged">
                        <ComboBoxItem Content="none"/>
                        <ComboBoxItem Content="assault rifle"/>
                        <ComboBoxItem Content="lr-300"/>
                        <ComboBoxItem Content="mp5"/>
                        <ComboBoxItem Content="m249"/>
                        <ComboBoxItem Content="thompson"/>
                        <ComboBoxItem Content="custom smg"/>
                        <ComboBoxItem Content="sar"/>
                        <ComboBoxItem Content="python"/>
                        <ComboBoxItem Content="m39"/>
                        <ComboBoxItem Content="m92"/>
                        <ComboBoxItem Content="p2"/>
                        <ComboBoxItem Content="revolver"/>
                    </ComboBox>

                    <ComboBox SelectedIndex="0" x:Name="ScopeCombo" Text="none" SelectionChanged="ScopeCombo_SelectionChanged" HorizontalAlignment="Left" Margin="103,40,0,0" VerticalAlignment="Top" Width="132"  Style="{DynamicResource ResourceKey=ComboBoxFlatStyle}">
                        <ComboBoxItem Content="none"/>
                        <ComboBoxItem Content="8x scope"/>
                        <ComboBoxItem Content="16x scope"/>
                        <ComboBoxItem Content="holo sight"/>
                        <ComboBoxItem Content="simple sight"/>
                    </ComboBox>

                    <ComboBox SelectedIndex="0" x:Name="BarrelCombo" Text="none" SelectionChanged="BarrelCombo_SelectionChanged" HorizontalAlignment="Left" Margin="103,71,0,0" VerticalAlignment="Top" Width="132"  Style="{DynamicResource ResourceKey=ComboBoxFlatStyle}">
                        <ComboBoxItem Content="none"/>
                        <ComboBoxItem Content="muzzle boost"/>
                        <ComboBoxItem Content="muzzle brake"/>
                        <ComboBoxItem Content="silencer"/>
                    </ComboBox>

                    <Separator Background="MediumVioletRed" Margin="10,95,10,78" />

                    <CheckBox x:Name="ToggleCheck" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked" Foreground="White" Content="recoil control" HorizontalAlignment="Left" Margin="20,118,0,0" VerticalAlignment="Top"/>
                    <CheckBox x:Name="HumanizationCheck" Checked="HumanizationCheck_Checked" Unchecked="HumanizationCheck_Checked" Foreground="White" Content="humanization" HorizontalAlignment="Left" Margin="130,118,0,0" VerticalAlignment="Top"/>

                    <Separator Background="MediumVioletRed" Margin="10,133,10,40" />

                    <Button x:Name="SaveButton" Click="SaveButton_Click" Content="save" HorizontalAlignment="Left" Margin="33,152,0,0" VerticalAlignment="Top" Width="75" Style="{DynamicResource ResourceKey=FlatButton}" BorderBrush="{x:Null}" Background="Black" Foreground="MediumVioletRed" Height="28">
                        <Button.Resources>
                            <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="Black"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF191919"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="#FF191919"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button x:Name="LoadButton" Click="LoadButton_Click" Content="load" HorizontalAlignment="Left" Margin="133,152,0,0" VerticalAlignment="Top" Width="75" Style="{DynamicResource ResourceKey=FlatButton}" BorderBrush="{x:Null}" Background="Black" Foreground="MediumVioletRed" Height="28">
                        <Button.Resources>
                            <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="Black"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF191919"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="#FF191919"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>

                </Grid>
            </TabItem>
            <TabItem Header="settings" Background="Black" BorderBrush="{x:Null}">
                <Grid Background="Black">
                    <TabControl HorizontalAlignment="Center" Height="192" VerticalAlignment="Center" Width="245" Style="{DynamicResource FlatTab}" Margin="0,5,0,0">
                        <TabItem Header="general" Background="Black" BorderBrush="{x:Null}">
                            <Grid>
                                <Label Foreground="White" Content="sensitivity" Margin="10,24,163,106"/>
                                <TextBox x:Name="SensitivityBox" TextChanged="SensitivityBox_TextChanged"  HorizontalAlignment="Left" Height="23" Margin="76,28,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="34" BorderBrush="{x:Null}" Background="Black" Foreground="White"/>

                                <Label Foreground="White" Content="fov" Margin="110,24,98,106"/>
                                <TextBox x:Name="FovBox" TextChanged="FovBox_TextChanged" HorizontalAlignment="Left" Height="23" Margin="145,28,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="34" BorderBrush="{x:Null}" Background="Black" Foreground="White" RenderTransformOrigin="-0.118,0.609"/>

                                <Label Foreground="#FFA4A4A4" Content="input" Margin="10,1,184,128"/>
                                <Label Foreground="#FFA4A4A4" Content="process priority" Margin="10,76,135,54"/>
                                <ComboBox x:Name="ProcessPriorityCombo" SelectedIndex="0" SelectionChanged="ProcessPriorityCombo_SelectionChanged" Text="none" HorizontalAlignment="Left" Margin="10,105,0,0" VerticalAlignment="Top" Width="94"  Style="{DynamicResource ResourceKey=ComboBoxFlatStyle}">
                                    <ComboBoxItem Content="realtime"/>
                                    <ComboBoxItem Content="normal"/>
                                    <ComboBoxItem Content="low"/>
                                </ComboBox>
                                <CheckBox x:Name="CursorCheck" Checked="CursorCheck_Checked_1" Unchecked="CursorCheck_Checked_1" Foreground="White" Content="cursor check" HorizontalAlignment="Left" Margin="14,56,0,0" VerticalAlignment="Top"/>
                                <Label Foreground="#FFA4A4A4" Content="miscellaneous" Margin="123,76,22,54"/>
                                <CheckBox x:Name="TaskbarCheck" IsChecked="True" Checked="TaskbarCheck_Unchecked" Unchecked="TaskbarCheck_Unchecked" Foreground="White" Content="show in taskbar" HorizontalAlignment="Left" Margin="128,110,0,0" VerticalAlignment="Top"/>
                                <CheckBox x:Name="SoundCheck" Checked="SoundCheck_Checked" Unchecked="SoundCheck_Checked" Foreground="White" Content="sounds" HorizontalAlignment="Left" Margin="123,56,0,0" VerticalAlignment="Top"/>
                            </Grid>
                        </TabItem>

                        <TabItem Header="recoil" Background="Black" BorderBrush="{x:Null}">
                            <Grid>
                                <Label Foreground="#FFA4A4A4" Content="hipfire" Margin="8,4,176,130"/>
                                <CheckBox x:Name="ADSHipfireCheck" Checked="ADSHipfireCheck_Checked" Unchecked="ADSHipfireCheck_Checked" Content="ads hipfire" Foreground="White" HorizontalAlignment="Left" Margin="10,37,0,0" VerticalAlignment="Top"/>
                                <CheckBox x:Name="AlwaysHipfireCheck" Checked="AlwaysHipfireCheck_Checked" Unchecked="AlwaysHipfireCheck_Checked" Content="always hipfire" Foreground="White" HorizontalAlignment="Left" Margin="101,37,0,0" VerticalAlignment="Top"/>

                                <Label Foreground="#FFA4A4A4" Content="miscellaneous" Margin="8,56,143,78"/>
                                <CheckBox x:Name="RapidFireCheck" Checked="RapidFireCheck_Checked" Unchecked="RapidFireCheck_Unchecked" Content="rapid fire" Foreground="White" HorizontalAlignment="Left" Margin="10,89,0,0" VerticalAlignment="Top"/>
                                <CheckBox x:Name="LegacyRecoilCheck" Checked="LegacyRecoilCheck_Checked" Unchecked="LegacyRecoilCheck_Unchecked" Content="use legacy recoil" Foreground="White" HorizontalAlignment="Left" Margin="101,89,0,0" VerticalAlignment="Top"/>
                            </Grid>
                        </TabItem>

                        <TabItem Header="realism" Background="Black" BorderBrush="{x:Null}">
                            <Grid>
                                <local:FlatSlider x:Name="xControlSlider" SliderMoved="xControlSlider_SliderMoved" Background="Black" Margin="71,31,10,113"/>
                                <Label Content="x control" HorizontalAlignment="Left" Margin="8,22,0,0" VerticalAlignment="Top" Foreground="White"/>

                                <local:FlatSlider x:Name="yControlSlider" SliderMoved="yControlSlider_SliderMoved" Background="Black" Margin="71,56,10,87"/>
                                <Label Content="y control" HorizontalAlignment="Left" Margin="8,47,0,0" VerticalAlignment="Top" Foreground="White"/>

                                <local:FlatSlider x:Name="randomControlSlider" SliderMoved="randomControlSlider_SliderMoved" Background="Black" Margin="71,82,10,61"/>
                                <Label Content="random" HorizontalAlignment="Left" Margin="8,75,0,0" VerticalAlignment="Top" Foreground="White"/>
                                <Label Foreground="#FFA4A4A4" Content="custom" Margin="8,0,176,134"/>

                                <local:FlatSlider x:Name="shakeControlSlider" SliderMoved="shakeControlSlider_SliderMoved" Background="Black" Margin="71,109,10,34"/>
                                <Label Content="shake" HorizontalAlignment="Left" Margin="8,102,0,0" VerticalAlignment="Top" Foreground="White"/>
                                <CheckBox x:Name="realisticCheck" Checked="realisticCheck_Checked" Unchecked="realisticCheck_Checked" Foreground="White" Content="realistic movement" HorizontalAlignment="Left" Margin="10,137,0,0" VerticalAlignment="Top"/>

                            </Grid>
                        </TabItem>

                        <TabItem Header="overlay" Background="Black" BorderBrush="{x:Null}">
                            <Grid>
                                <Button Click="InstallButton_Click" x:Name="InstallButton" Content="install" HorizontalAlignment="Left" Margin="95,126,0,0" VerticalAlignment="Top" Width="66" Style="{DynamicResource ResourceKey=FlatButton}" BorderBrush="{x:Null}" Background="Black" Foreground="MediumVioletRed" Height="28">
                                    <Button.Resources>
                                        <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsDefaulted" Value="true">
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="Background" TargetName="border" Value="Black"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF191919"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter Property="Background" TargetName="border" Value="#FF191919"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Resources>
                                </Button>

                                <Button x:Name="UninstallButton" Click="UninstallButton_Click" Content="uninstall" HorizontalAlignment="Left" Margin="169,126,0,0" VerticalAlignment="Top" Width="64" Style="{DynamicResource ResourceKey=FlatButton}" BorderBrush="{x:Null}" Background="Black" Foreground="MediumVioletRed" Height="28">
                                    <Button.Resources>
                                        <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsDefaulted" Value="true">
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="Background" TargetName="border" Value="Black"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF191919"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter Property="Background" TargetName="border" Value="#FF191919"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Resources>
                                </Button>

                                <CheckBox Checked="MenuCheck_Checked" Unchecked="MenuCheck_Checked" IsChecked="True" x:Name="MenuCheck" Content="weapon info" Foreground="White" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                                <CheckBox Checked="MenuCheck_Checked" Unchecked="MenuCheck_Checked" IsChecked="True" x:Name="WaterMarkCheck" Content="watermark" Foreground="White" HorizontalAlignment="Left" Margin="110,10,0,0" VerticalAlignment="Top"/>

                                <Label Foreground="#FFA4A4A4" Content="crosshair options" Margin="10,35,120,99"/>
                                <ComboBox x:Name="crosshairCombo" SelectedIndex="0" SelectionChanged="crosshairCombo_SelectionChanged" Text="none" HorizontalAlignment="Left" Margin="14,64,0,0" VerticalAlignment="Top" Width="82"  Style="{DynamicResource ResourceKey=ComboBoxFlatStyle}" Height="23">
                                    <ComboBoxItem Content="none"/>
                                    <ComboBoxItem Content="cross"/>
                                    <ComboBoxItem Content="dot"/>
                                </ComboBox>
                                <ComboBox x:Name="crosshairColorCombo" SelectedIndex="0" SelectionChanged="crosshairColorCombo_SelectionChanged" Text="none" HorizontalAlignment="Left" Margin="110,64,0,0" VerticalAlignment="Top" Width="76"  Style="{DynamicResource ResourceKey=ComboBoxFlatStyle}" Height="23">
                                    <ComboBoxItem Content="green"/>
                                    <ComboBoxItem Content="pink"/>
                                    <ComboBoxItem Content="red"/>
                                    <ComboBoxItem Content="white"/>
                                </ComboBox>


                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="helpers" Background="Black" BorderBrush="{x:Null}">
                <Grid Background="Black">
                    <Label Foreground="#FFA4A4A4" Content="calibration" Margin="10,117,141,48"/>
                    <Button Click="CalibrateSplitters_Click" x:Name="CalibrateSplitters" Content="furnace splitters" HorizontalAlignment="Left" Margin="10,149,0,0" VerticalAlignment="Top" Width="94" Style="{DynamicResource ResourceKey=FlatButton}" BorderBrush="{x:Null}" Background="Black" Foreground="MediumVioletRed" Height="28">
                        <Button.Resources>
                            <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="Black"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF191919"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="#FF191919"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Click="CalibrateAutoDetection_Click" x:Name="CalibrateAutoDetection" Content="auto detection" HorizontalAlignment="Left" Margin="120,149,0,0" VerticalAlignment="Top" Width="94" Style="{DynamicResource ResourceKey=FlatButton}" BorderBrush="{x:Null}" Background="Black" Foreground="MediumVioletRed" Height="28">
                        <Button.Resources>
                            <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="Black"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF191919"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="#FF191919"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>

                    <Label Foreground="#FFA4A4A4" Content="auto code lock" Margin="10,60,141,105"/>
                    <TextBox x:Name="autoCodeBox" Text="1234" HorizontalAlignment="Left" Height="23" Margin="16,90,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="41" BorderBrush="#FF1F1F1F" Background="Black" Foreground="White"/>
                    <Label Foreground="#FFA4A4A4" Content="auto upgrade" Margin="10,7,141,158"/>
                    <RadioButton IsChecked="True" x:Name="woodRadio" Checked="woodRadio_Checked" Foreground="White" Content="wood" HorizontalAlignment="Left" Margin="16,39,0,0" VerticalAlignment="Top"/>
                    <RadioButton x:Name="stoneRadio" Checked="woodRadio_Checked" Foreground="White" Content="stone" HorizontalAlignment="Left" Margin="74,39,0,0" VerticalAlignment="Top"/>
                    <RadioButton x:Name="metalRadio" Checked="woodRadio_Checked" Foreground="White" Content="metal" HorizontalAlignment="Left" Margin="130,39,0,0" VerticalAlignment="Top"/>
                    <RadioButton x:Name="hqmRadio" Checked="woodRadio_Checked" Foreground="White" Content="hqm" HorizontalAlignment="Left" Margin="184,39,0,0" VerticalAlignment="Top"/>
                    <Label Foreground="#FFA4A4A4" Content="auto detection" Margin="124,60,27,105"/>
                    <CheckBox x:Name="AutoDetectCheck" Checked="AutoDetectCheck_Checked" Unchecked="AutoDetectCheck_Checked" Foreground="White" Content="auto detection" HorizontalAlignment="Left" Margin="129,93,0,0" VerticalAlignment="Top"/>
                </Grid>
            </TabItem>
            <TabItem Header="keybinds" Background="Black" BorderBrush="{x:Null}">
                <Grid Background="Black">
                    <TextBox x:Name="WeaponsKeybindBox" TextChanged="WeaponsKeybindBox_TextChanged" KeyDown="WeaponsKeybindBox_KeyDown" HorizontalAlignment="Left" Height="22" Margin="159,29,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="46" BorderBrush="#FF2C2C2C" Background="Black" Foreground="White"/>
                    <ComboBox SelectedIndex="0" x:Name="WeaponsKeybindCombo" Text="none" HorizontalAlignment="Left" Margin="10,29,0,0" VerticalAlignment="Top" Width="132"  Style="{DynamicResource ResourceKey=ComboBoxFlatStyle}" SelectionChanged="WeaponCombo_SelectionChanged">
                        <ComboBoxItem Content="assault rifle"/>
                        <ComboBoxItem Content="lr-300"/>
                        <ComboBoxItem Content="mp5"/>
                        <ComboBoxItem Content="m249"/>
                        <ComboBoxItem Content="thompson"/>
                        <ComboBoxItem Content="custom smg"/>
                        <ComboBoxItem Content="sar"/>
                        <ComboBoxItem Content="python"/>
                        <ComboBoxItem Content="m39"/>
                        <ComboBoxItem Content="m92"/>
                        <ComboBoxItem Content="p2"/>
                        <ComboBoxItem Content="revolver"/>
                        <ComboBoxItem Content="8x scope"/>
                        <ComboBoxItem Content="16x scope"/>
                        <ComboBoxItem Content="holo sight"/>
                        <ComboBoxItem Content="simple sight"/>
                        <ComboBoxItem Content="muzzle boost"/>
                        <ComboBoxItem Content="muzzle brake"/>
                        <ComboBoxItem Content="silencer"/>
                    </ComboBox>
                    <Label Foreground="#FFA4A4A4" Content="weapons and attachments" Margin="10,1,84,163"/>

                    <TextBox x:Name="HelpersKeybindBox" TextChanged="HelpersKeybindBox_TextChanged" KeyDown="HelpersKeybindBox_KeyDown" HorizontalAlignment="Left" Height="22" Margin="159,83,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="46" BorderBrush="#FF2C2C2C" Background="Black" Foreground="White"/>
                    <ComboBox SelectedIndex="0" x:Name="HelpersKeybindCombo" Text="none" HorizontalAlignment="Left" Margin="10,83,0,0" VerticalAlignment="Top" Width="132"  Style="{DynamicResource ResourceKey=ComboBoxFlatStyle}" SelectionChanged="WeaponCombo_SelectionChanged">
                        <ComboBoxItem Content="split small furnace"/>
                        <ComboBoxItem Content="split large furnace"/>
                        <ComboBoxItem Content="auto code lock"/>
                        <ComboBoxItem Content="auto upgrade"/>
                    </ComboBox>
                    <Label Foreground="#FFA4A4A4" Content="helpers" Margin="10,53,180,118"/>

                    <TextBox x:Name="MiscKeybindBox" TextChanged="MiscKeybindBox_TextChanged" KeyDown="MiscKeybindBox_KeyDown" HorizontalAlignment="Left" Height="22" Margin="159,138,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="46" BorderBrush="#FF2C2C2C" Background="Black" Foreground="White"/>
                    <ComboBox SelectedIndex="0" x:Name="MiscKeybindCombo" Text="none" HorizontalAlignment="Left" Margin="10,138,0,0" VerticalAlignment="Top" Width="132"  Style="{DynamicResource ResourceKey=ComboBoxFlatStyle}" SelectionChanged="WeaponCombo_SelectionChanged">
                        <ComboBoxItem Content="toggle recoil"/>
                        <ComboBoxItem Content="activate overlay"/>
                        <ComboBoxItem Content="hide script"/>
                    </ComboBox>
                    <Label Foreground="#FFA4A4A4" Content="miscellaneous" Margin="9,109,148,55"/>
                    <Button x:Name="clearWeaponBind" Click="clearWeaponBind_Click" Content="X" HorizontalAlignment="Left" Margin="216,29,0,0" VerticalAlignment="Top" Width="24" Style="{DynamicResource ResourceKey=FlatButton}" BorderBrush="{x:Null}" Background="Black" Foreground="MediumVioletRed" Height="22" RenderTransformOrigin="0.694,0.905">
                        <Button.Resources>
                            <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="Black"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF191919"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="#FF191919"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button x:Name="clearHelperBind" Click="clearHelperBind_Click" Content="X" HorizontalAlignment="Left" Margin="216,83,0,0" VerticalAlignment="Top" Width="24" Style="{DynamicResource ResourceKey=FlatButton}" BorderBrush="{x:Null}" Background="Black" Foreground="MediumVioletRed" Height="22" RenderTransformOrigin="0.694,0.905">
                        <Button.Resources>
                            <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="Black"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF191919"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="#FF191919"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button x:Name="clearMiscBind" Click="clearMiscBind_Click"  Content="X" HorizontalAlignment="Left" Margin="216,138,0,0" VerticalAlignment="Top" Width="24" Style="{DynamicResource ResourceKey=FlatButton}" BorderBrush="{x:Null}" Background="Black" Foreground="MediumVioletRed" Height="22" RenderTransformOrigin="0.694,0.905">
                        <Button.Resources>
                            <Style x:Key="FlatButton" TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="Black"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF191919"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="#FF191919"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <CheckBox Content="arrow key cycling" x:Name="arrowKeyCycleCheck" Checked="arrowKeyCycleCheck_Checked" Unchecked="arrowKeyCycleCheck_Checked"  HorizontalAlignment="Left" Margin="11,172,0,0" VerticalAlignment="Top" Foreground="White"/>
                </Grid>
            </TabItem>
        </TabControl>

        <Grid HorizontalAlignment="Left" Height="40" VerticalAlignment="Top" Width="273" MouseLeftButtonDown="Grid_MouseDown" Background="Black">
            <Label x:Name="mainTitle" Content="vector" Foreground="MediumVioletRed" HorizontalAlignment="Left" Margin="11,6,0,0" VerticalAlignment="Top"/>
            <Button Click="Button_Click" Content="X" Background="Black" Foreground="MediumVioletRed" BorderBrush="Black" HorizontalAlignment="Left" Margin="188,9,0,0" VerticalAlignment="Top" Width="75" Style="{DynamicResource ExitButton}"/>
        </Grid>
    </Grid>

</Window>
